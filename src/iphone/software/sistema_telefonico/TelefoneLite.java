package iphone.software.sistema_telefonico;
import iphone.dados.numero_telefonico.NumeroTelefonico;
import java.util.concurrent.TimeUnit;
import java.util.Scanner;
import java.io.PrintStream;

/**
 * Class to simulate the functions of a phone app.
 */
public class TelefoneLite implements SistemaTelefonico {

	/** Resembles the numbers of someone. */
	private NumeroTelefonico[] listaDeNumeros = {
		// Numbers generated by: https://devtools.com.br/gerador-numero-telefone/
		// This 'll be changed to ArrayList some day.
		new NumeroTelefonico("+55 (081) 9 3266-4724", "VIVO"),
		new NumeroTelefonico("+55 (087) 9 2314-6465", "TIM"),
		new NumeroTelefonico("+55 (087) 9 3231-4462", "CLARO"),
		new NumeroTelefonico("+55 (089) 9 3343-3703", "OI")
	};
	/** The names wich will referece the contact number. */
	private String[] listaDeNomes = {
		"Maria José",
		"José Maria",
		"Antônio D'água",
		"Joana Pizzaiola"
	};

	/** Resemble the number that's on the phone (SIM card). */
	private final NumeroTelefonico numeroProprio;

	public TelefoneLite(String numero, String operadora) {
		this.numeroProprio = new NumeroTelefonico(numero, operadora);
	}

	/**
	 * Make a call to the given number.
	 */
	private void fazerLigacao(NumeroTelefonico numeroReceptor, String contatoReceptor) {
		while (Math.abs(this.numeroProprio.getSinal() - numeroReceptor.getSinal()) > 30) {
			System.out.println("Sinal fraco, tentando outra torre.");
			this.numeroProprio.pegarSinalDoutraTorre();
		}
		System.out.printf("Ligando para %s...\n", contatoReceptor);
		try {
			TimeUnit.SECONDS.sleep(3);
		} catch (InterruptedException excecao) {
			System.out.println("Chamada encerrada.");
		} finally {
			System.out.println("Ninguém na linha.");
		}
	}

	/**
	 * Method to act like the UI of the application.
	 */
	public void iniciar(Scanner stdin, PrintStream stdout) {
		String procede = "s";
		stdout.print("\nTelefone Lite iniciado. "); 
		do {
			stdout.println("Para quem ligarás?");
			for (int indice = 0; indice < this.listaDeNomes.length; indice++) {
				stdout.printf("%d - %s\n", indice + 1, this.listaDeNomes[indice]);
			}
			stdout.print("Indique o índice\n ?>");
			int escolha = -1;
			try {
				escolha = Integer.parseInt(stdin.nextLine()) - 1;
			} catch (NumberFormatException excecao) {
				stdout.println("Índice inserido inválido.");
			}
			if (escolha >= 0 && escolha < this.listaDeNumeros.length) {
				this.fazerLigacao(this.listaDeNumeros[escolha], this.listaDeNomes[escolha]);
			} else if (escolha != -1) {
				stdout.println("Índice informado fora do intervalo.");
			}
			stdout.print("Fazer outra chamada?\n's' para sim, qualquer outro valor, não.\n ?>");
			procede = stdin.nextLine().toLowerCase();
		} while (procede.equals("s"));
	}

	/* CRUD for the contact list will be added soon. */
}
